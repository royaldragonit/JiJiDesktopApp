//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ji
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Ji.Core;

    public partial class JiMilkTeaEntities : DbContext
    {
        public JiMilkTeaEntities()
            : base(System.Configuration.ConfigurationManager.ConnectionStrings["JiMilkTeaEntities"].ConnectionString.Decrypt("VPSP@ssw0rd"))
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BillFood> BillFood { get; set; }
        public virtual DbSet<Bills> Bills { get; set; }
        public virtual DbSet<HistoryDeleteItemOrder> HistoryDeleteItemOrder { get; set; }
        public virtual DbSet<L_Customer> L_Customer { get; set; }
        public virtual DbSet<L_DateCome_Customer> L_DateCome_Customer { get; set; }
        public virtual DbSet<L_Floor> L_Floor { get; set; }
        public virtual DbSet<L_Food> L_Food { get; set; }
        public virtual DbSet<L_HistoryPoached> L_HistoryPoached { get; set; }
        public virtual DbSet<L_Poached> L_Poached { get; set; }
        public virtual DbSet<L_Topping> L_Topping { get; set; }
        public virtual DbSet<L_Users> L_Users { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<OrdersFood> OrdersFood { get; set; }
        public virtual DbSet<BillDetail> BillDetail { get; set; }
        public virtual DbSet<JiApplication> JiApplication { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Facility> Facility { get; set; }
        public virtual DbSet<Installed> Installed { get; set; }
        public virtual DbSet<Installer> Installer { get; set; }
        public virtual DbSet<L_History_Installer> L_History_Installer { get; set; }
    
        public virtual int ji_AddItemOrder(Nullable<int> affectFloor, string topping, Nullable<int> toppingID, Nullable<int> foodID, Nullable<int> quantity, Nullable<int> table)
        {
            var affectFloorParameter = affectFloor.HasValue ?
                new ObjectParameter("AffectFloor", affectFloor) :
                new ObjectParameter("AffectFloor", typeof(int));
    
            var toppingParameter = topping != null ?
                new ObjectParameter("Topping", topping) :
                new ObjectParameter("Topping", typeof(string));
    
            var toppingIDParameter = toppingID.HasValue ?
                new ObjectParameter("ToppingID", toppingID) :
                new ObjectParameter("ToppingID", typeof(int));
    
            var foodIDParameter = foodID.HasValue ?
                new ObjectParameter("FoodID", foodID) :
                new ObjectParameter("FoodID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var tableParameter = table.HasValue ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ji_AddItemOrder", affectFloorParameter, toppingParameter, toppingIDParameter, foodIDParameter, quantityParameter, tableParameter);
        }
    
        public virtual ObjectResult<ji_GetDataOrder_Result> ji_GetDataOrder(Nullable<int> affectFloor, Nullable<int> table)
        {
            var affectFloorParameter = affectFloor.HasValue ?
                new ObjectParameter("AffectFloor", affectFloor) :
                new ObjectParameter("AffectFloor", typeof(int));
    
            var tableParameter = table.HasValue ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ji_GetDataOrder_Result>("ji_GetDataOrder", affectFloorParameter, tableParameter);
        }
    
        public virtual ObjectResult<ji_Checkout_Result> ji_Checkout(Nullable<int> orderID, Nullable<int> userID, Nullable<int> discount, string customerName, string customerPhone, Nullable<System.DateTime> dateTime, Nullable<int> moneyCustomer)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var moneyCustomerParameter = moneyCustomer.HasValue ?
                new ObjectParameter("MoneyCustomer", moneyCustomer) :
                new ObjectParameter("MoneyCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ji_Checkout_Result>("ji_Checkout", orderIDParameter, userIDParameter, discountParameter, customerNameParameter, customerPhoneParameter, dateTimeParameter, moneyCustomerParameter);
        }
    
        public virtual ObjectResult<string> ji_Installer(string nameDLL, string dLL, string version)
        {
            var nameDLLParameter = nameDLL != null ?
                new ObjectParameter("NameDLL", nameDLL) :
                new ObjectParameter("NameDLL", typeof(string));
    
            var dLLParameter = dLL != null ?
                new ObjectParameter("DLL", dLL) :
                new ObjectParameter("DLL", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ji_Installer", nameDLLParameter, dLLParameter, versionParameter);
        }
    
        public virtual ObjectResult<ji_Printing_Result1> ji_Printing(Nullable<int> orderID, Nullable<int> userID, Nullable<int> discount, string customerName, string customerPhone, Nullable<System.DateTime> dateTime, Nullable<int> moneyCustomer)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var moneyCustomerParameter = moneyCustomer.HasValue ?
                new ObjectParameter("MoneyCustomer", moneyCustomer) :
                new ObjectParameter("MoneyCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ji_Printing_Result1>("ji_Printing", orderIDParameter, userIDParameter, discountParameter, customerNameParameter, customerPhoneParameter, dateTimeParameter, moneyCustomerParameter);
        }
    
        public virtual ObjectResult<LoadMilk_Result> LoadMilk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadMilk_Result>("LoadMilk");
        }
    
        public virtual int ji_CongThuc_Save(Nullable<System.Guid> congThucID, Nullable<int> categoryID, string thanhPhan, string congThuc, string foodName, string facID, string unit, Nullable<int> price, Nullable<int> priceInput, Nullable<int> createdBy)
        {
            var congThucIDParameter = congThucID.HasValue ?
                new ObjectParameter("CongThucID", congThucID) :
                new ObjectParameter("CongThucID", typeof(System.Guid));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var thanhPhanParameter = thanhPhan != null ?
                new ObjectParameter("ThanhPhan", thanhPhan) :
                new ObjectParameter("ThanhPhan", typeof(string));
    
            var congThucParameter = congThuc != null ?
                new ObjectParameter("CongThuc", congThuc) :
                new ObjectParameter("CongThuc", typeof(string));
    
            var foodNameParameter = foodName != null ?
                new ObjectParameter("FoodName", foodName) :
                new ObjectParameter("FoodName", typeof(string));
    
            var facIDParameter = facID != null ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var priceInputParameter = priceInput.HasValue ?
                new ObjectParameter("PriceInput", priceInput) :
                new ObjectParameter("PriceInput", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ji_CongThuc_Save", congThucIDParameter, categoryIDParameter, thanhPhanParameter, congThucParameter, foodNameParameter, facIDParameter, unitParameter, priceParameter, priceInputParameter, createdByParameter);
        }
    
        public virtual int ji_CongThuc_Update(Nullable<System.Guid> congThucID, Nullable<int> categoryID, string thanhPhan, string congThuc, string foodName, string facID, string unit, Nullable<int> price, Nullable<int> priceInput, Nullable<int> createdBy)
        {
            var congThucIDParameter = congThucID.HasValue ?
                new ObjectParameter("CongThucID", congThucID) :
                new ObjectParameter("CongThucID", typeof(System.Guid));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var thanhPhanParameter = thanhPhan != null ?
                new ObjectParameter("ThanhPhan", thanhPhan) :
                new ObjectParameter("ThanhPhan", typeof(string));
    
            var congThucParameter = congThuc != null ?
                new ObjectParameter("CongThuc", congThuc) :
                new ObjectParameter("CongThuc", typeof(string));
    
            var foodNameParameter = foodName != null ?
                new ObjectParameter("FoodName", foodName) :
                new ObjectParameter("FoodName", typeof(string));
    
            var facIDParameter = facID != null ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var priceInputParameter = priceInput.HasValue ?
                new ObjectParameter("PriceInput", priceInput) :
                new ObjectParameter("PriceInput", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ji_CongThuc_Update", congThucIDParameter, categoryIDParameter, thanhPhanParameter, congThucParameter, foodNameParameter, facIDParameter, unitParameter, priceParameter, priceInputParameter, createdByParameter);
        }
    
        public virtual int ji_Food_Save(Nullable<int> saleOff, Nullable<int> categoryID, string image, Nullable<bool> active, string foodName, string facID, string unit, Nullable<int> price, Nullable<int> priceInput, Nullable<int> createdBy)
        {
            var saleOffParameter = saleOff.HasValue ?
                new ObjectParameter("SaleOff", saleOff) :
                new ObjectParameter("SaleOff", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var foodNameParameter = foodName != null ?
                new ObjectParameter("FoodName", foodName) :
                new ObjectParameter("FoodName", typeof(string));
    
            var facIDParameter = facID != null ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var priceInputParameter = priceInput.HasValue ?
                new ObjectParameter("PriceInput", priceInput) :
                new ObjectParameter("PriceInput", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ji_Food_Save", saleOffParameter, categoryIDParameter, imageParameter, activeParameter, foodNameParameter, facIDParameter, unitParameter, priceParameter, priceInputParameter, createdByParameter);
        }
    
        public virtual ObjectResult<ji_LoadCategory_Result> ji_LoadCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ji_LoadCategory_Result>("ji_LoadCategory");
        }
    
        public virtual ObjectResult<ji_LoadMilk_Result> ji_LoadMilk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ji_LoadMilk_Result>("ji_LoadMilk");
        }
    }
}
